
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;

// Fontawesome SCSS files
@import '~@fortawesome/fontawesome-free/scss/fontawesome.scss';
@import '~@fortawesome/fontawesome-free/scss/brands.scss';
@import '~@fortawesome/fontawesome-free/scss/regular.scss';
@import '~@fortawesome/fontawesome-free/scss/solid.scss';

// Bootstrap SCSS files
@import 'bootstrap/scss/functions';
@import 'bootstrap/scss/variables';
@import 'bootstrap/scss/utilities';

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!

@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$ming-palette: (
  50: #DFF2F6,
  100: #C1DBDD,
  200: #A1C0C5,
  300: #7FA6AC,
  400: #659299,
  500: #4B7F86,
  600: #407076,
  700: #325B61,
  800: #25484E,
  900: #153337,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white
  )
);
$tyrian-purple-palette: (
  50: #f6e0e3,
  100: #eab2ba,
  200: #da828f,
  300: #c95465,
  400: #bc354a,
  500: #af1c31,
  600: #a11830,
  700: #8e142e,
  800: #7b0f2b,
  900: #590925,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white
  )
);
$opal-palette: (
  50: #e7f1ee,
  100: #cddbd3,
  200: #aec2b9,
  300: #8fa99e,
  400: #779589,
  500: #618375,
  600: #557366,
  700: #455f54,
  800: #364c43,
  900: #25362f,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white
  )
);
$LarsonServerUI-primary: mat.define-palette($ming-palette, 500);
$LarsonServerUI-accent: mat.define-palette($tyrian-purple-palette, 900);

$custom-typography: mat.define-typography-config(
  $font-family: '"Montserrat", sans-serif;'
);

// The warn palette is optional (defaults to red).
$LarsonServerUI-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$LarsonServerUI-theme: mat.define-light-theme((
  color: (
    primary: $LarsonServerUI-primary,
    accent: $LarsonServerUI-accent,
    warn: $LarsonServerUI-warn,
  ),
  typography: $custom-typography
));

.background-style {
  background: mat.get-color-from-palette($opal-palette, 300);
}

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($LarsonServerUI-theme);

